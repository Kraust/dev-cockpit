FROM ubuntu:24.04

COPY gitconfig /root/.gitconfig
COPY entrypoint.ps1 /root/entrypoint.ps1

RUN apt-get update \
	&& apt-get install -y software-properties-common

RUN add-apt-repository ppa:neovim-ppa/unstable \
	&& apt-get update \
	&& apt-get install -y neovim

RUN apt-get update \
	&& apt-get install -y python3-dev python3-pip git

RUN mkdir -p /root/.ssh && ssh-keyscan github.com >> /root/.ssh/known_hosts

RUN mkdir -p /opt/.config

RUN apt-get update && apt-get install -y \
	git \
	unzip \
	make \
	cmake \
	gcc \
	g++ \
	clang \
	zoxide \
	ripgrep \
	fd-find \
	fzf \
	yarn \
	lldb \
	curl \
	python3-pip \
	python3-venv \
	golang \
	openjdk-21-jdk

# Docker
RUN curl -sSf https://get.docker.com | sh

# Rust
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y && . /root/.bashrc \
	&& cargo install tree-sitter-cli \
	&& cargo install starship

# Node
RUN curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash && . ~/.bashrc && nvm install 18 && nvm use 18

# Nvim
RUN git clone https://github.com/Kraust/nvimdots.git /opt/.config/nvim

RUN TARGET_DIR=$HOME/.local/xonsh-env PYTHON_VER=3.11 XONSH_VER='xonsh[full]>=0.19.0' \
 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/anki-code/xonsh-install/main/mamba-install-xonsh.sh)"

ENV SHELL=/home/kraust/.local/xonsh-env/bin/xonsh

CMD [ "pwsh", "-Command", "/root/entrypoint.py" ]
